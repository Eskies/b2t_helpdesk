// Code generated by qtc from "basepage.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line basepage.qtpl:1
package view

//line basepage.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line basepage.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line basepage.qtpl:2
type Page interface {
//line basepage.qtpl:2
	Title() string
//line basepage.qtpl:2
	StreamTitle(qw422016 *qt422016.Writer)
//line basepage.qtpl:2
	WriteTitle(qq422016 qtio422016.Writer)
//line basepage.qtpl:2
	Body() string
//line basepage.qtpl:2
	StreamBody(qw422016 *qt422016.Writer)
//line basepage.qtpl:2
	WriteBody(qq422016 qtio422016.Writer)
//line basepage.qtpl:2
	Modal() string
//line basepage.qtpl:2
	StreamModal(qw422016 *qt422016.Writer)
//line basepage.qtpl:2
	WriteModal(qq422016 qtio422016.Writer)
//line basepage.qtpl:2
	Script() string
//line basepage.qtpl:2
	StreamScript(qw422016 *qt422016.Writer)
//line basepage.qtpl:2
	WriteScript(qq422016 qtio422016.Writer)
//line basepage.qtpl:2
}

//line basepage.qtpl:10
func StreamPageTemplate(qw422016 *qt422016.Writer, p Page) {
//line basepage.qtpl:10
	qw422016.N().S(`
<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>B2T - Telegram x Browser Helpdesk</title>

    <!-- Custom fonts for this template-->
    <link href="/static/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="/static/css/sb-admin-2.min.css" rel="stylesheet">
    <link href="/static/css/chatbox.css" rel="stylesheet">

    <!-- Custom styles for this page -->
    <link href="/static/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">

</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="index.html">
                <div class="sidebar-brand-icon rotate-n-15">
                    <i class="fas fa-laugh-wink"></i>
                </div>
                <div class="sidebar-brand-text mx-3">B2T - Helpdesk</div>
            </a>

            <!-- Divider -->
            <hr class="sidebar-divider my-0">

            <!-- Nav Item - Dashboard -->
            <li class="nav-item">
                <a class="nav-link" href="/">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Beranda</span></a>
            </li>

            <!-- Nav Item - Charts -->
            <li class="nav-item">
                <a class="nav-link" href="/keluhan">
                    <i class="fas fa-fw fa-chart-area"></i>
                    <span>Daftar Keluhan</span></a>
            </li>
            
            <!-- Nav Item - Charts -->
            <li class="nav-item">
                <a class="nav-link" href="/rmq">
                    <i class="fas fa-fw fa-chart-area"></i>
                    <span>Telegram Bot Outbox</span></a>
            </li>
            <!-- Divider -->
            <hr class="sidebar-divider d-none d-md-block">

            <!-- Sidebar Toggler (Sidebar) -->
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>

        </ul>
        <!-- End of Sidebar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>

                    
                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">

                        
                        <div class="topbar-divider d-none d-sm-block"></div>

                        <!-- Nav Item - User Information -->
                        <li class="nav-item  no-arrow">
                            <a class="nav-link " href="#" id="userDropdown" role="button"
                                aria-haspopup="true" aria-expanded="false">
                                <span class="mr-2 d-none d-lg-inline text-gray-600 small">Admin</span>
                                <img class="img-profile rounded-circle"
                                    src="/static/img/undraw_profile.svg">
                            </a>
                        </li>

                    </ul>

                </nav>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <!-- Page Heading -->
                    <h1 class="h3 mb-4 text-gray-800">`)
//line basepage.qtpl:129
	p.StreamTitle(qw422016)
//line basepage.qtpl:129
	qw422016.N().S(`</h1>
                    `)
//line basepage.qtpl:130
	p.StreamBody(qw422016)
//line basepage.qtpl:130
	qw422016.N().S(`

                </div>
                <!-- /.container-fluid -->

            </div>
            <!-- End of Main Content -->

            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright 2021 &copy; B2T Helpdesk (Eskies)</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    
    `)
//line basepage.qtpl:160
	p.StreamModal(qw422016)
//line basepage.qtpl:160
	qw422016.N().S(`

    <!-- Bootstrap core JavaScript-->
    <script src="/static/vendor/jquery/jquery.min.js"></script>
    <script src="/static/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="/static/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="/static/js/sb-admin-2.min.js"></script>

    <!-- Page level plugins -->
    <script src="/static/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="/static/vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


    `)
//line basepage.qtpl:178
	p.StreamScript(qw422016)
//line basepage.qtpl:178
	qw422016.N().S(`

</body>
</html>
`)
//line basepage.qtpl:182
}

//line basepage.qtpl:182
func WritePageTemplate(qq422016 qtio422016.Writer, p Page) {
//line basepage.qtpl:182
	qw422016 := qt422016.AcquireWriter(qq422016)
//line basepage.qtpl:182
	StreamPageTemplate(qw422016, p)
//line basepage.qtpl:182
	qt422016.ReleaseWriter(qw422016)
//line basepage.qtpl:182
}

//line basepage.qtpl:182
func PageTemplate(p Page) string {
//line basepage.qtpl:182
	qb422016 := qt422016.AcquireByteBuffer()
//line basepage.qtpl:182
	WritePageTemplate(qb422016, p)
//line basepage.qtpl:182
	qs422016 := string(qb422016.B)
//line basepage.qtpl:182
	qt422016.ReleaseByteBuffer(qb422016)
//line basepage.qtpl:182
	return qs422016
//line basepage.qtpl:182
}

//line basepage.qtpl:184
type BasePage struct{}

//line basepage.qtpl:185
func (p *BasePage) StreamTitle(qw422016 *qt422016.Writer) {
//line basepage.qtpl:185
	qw422016.N().S(`This is a base title`)
//line basepage.qtpl:185
}

//line basepage.qtpl:185
func (p *BasePage) WriteTitle(qq422016 qtio422016.Writer) {
//line basepage.qtpl:185
	qw422016 := qt422016.AcquireWriter(qq422016)
//line basepage.qtpl:185
	p.StreamTitle(qw422016)
//line basepage.qtpl:185
	qt422016.ReleaseWriter(qw422016)
//line basepage.qtpl:185
}

//line basepage.qtpl:185
func (p *BasePage) Title() string {
//line basepage.qtpl:185
	qb422016 := qt422016.AcquireByteBuffer()
//line basepage.qtpl:185
	p.WriteTitle(qb422016)
//line basepage.qtpl:185
	qs422016 := string(qb422016.B)
//line basepage.qtpl:185
	qt422016.ReleaseByteBuffer(qb422016)
//line basepage.qtpl:185
	return qs422016
//line basepage.qtpl:185
}

//line basepage.qtpl:186
func (p *BasePage) StreamBody(qw422016 *qt422016.Writer) {
//line basepage.qtpl:186
	qw422016.N().S(`This is a base body`)
//line basepage.qtpl:186
}

//line basepage.qtpl:186
func (p *BasePage) WriteBody(qq422016 qtio422016.Writer) {
//line basepage.qtpl:186
	qw422016 := qt422016.AcquireWriter(qq422016)
//line basepage.qtpl:186
	p.StreamBody(qw422016)
//line basepage.qtpl:186
	qt422016.ReleaseWriter(qw422016)
//line basepage.qtpl:186
}

//line basepage.qtpl:186
func (p *BasePage) Body() string {
//line basepage.qtpl:186
	qb422016 := qt422016.AcquireByteBuffer()
//line basepage.qtpl:186
	p.WriteBody(qb422016)
//line basepage.qtpl:186
	qs422016 := string(qb422016.B)
//line basepage.qtpl:186
	qt422016.ReleaseByteBuffer(qb422016)
//line basepage.qtpl:186
	return qs422016
//line basepage.qtpl:186
}

//line basepage.qtpl:187
func (p *BasePage) StreamModal(qw422016 *qt422016.Writer) {
//line basepage.qtpl:187
	qw422016.N().S(`Modal`)
//line basepage.qtpl:187
}

//line basepage.qtpl:187
func (p *BasePage) WriteModal(qq422016 qtio422016.Writer) {
//line basepage.qtpl:187
	qw422016 := qt422016.AcquireWriter(qq422016)
//line basepage.qtpl:187
	p.StreamModal(qw422016)
//line basepage.qtpl:187
	qt422016.ReleaseWriter(qw422016)
//line basepage.qtpl:187
}

//line basepage.qtpl:187
func (p *BasePage) Modal() string {
//line basepage.qtpl:187
	qb422016 := qt422016.AcquireByteBuffer()
//line basepage.qtpl:187
	p.WriteModal(qb422016)
//line basepage.qtpl:187
	qs422016 := string(qb422016.B)
//line basepage.qtpl:187
	qt422016.ReleaseByteBuffer(qb422016)
//line basepage.qtpl:187
	return qs422016
//line basepage.qtpl:187
}

//line basepage.qtpl:188
func (p *BasePage) StreamScript(qw422016 *qt422016.Writer) {
//line basepage.qtpl:188
	qw422016.N().S(`Script`)
//line basepage.qtpl:188
}

//line basepage.qtpl:188
func (p *BasePage) WriteScript(qq422016 qtio422016.Writer) {
//line basepage.qtpl:188
	qw422016 := qt422016.AcquireWriter(qq422016)
//line basepage.qtpl:188
	p.StreamScript(qw422016)
//line basepage.qtpl:188
	qt422016.ReleaseWriter(qw422016)
//line basepage.qtpl:188
}

//line basepage.qtpl:188
func (p *BasePage) Script() string {
//line basepage.qtpl:188
	qb422016 := qt422016.AcquireByteBuffer()
//line basepage.qtpl:188
	p.WriteScript(qb422016)
//line basepage.qtpl:188
	qs422016 := string(qb422016.B)
//line basepage.qtpl:188
	qt422016.ReleaseByteBuffer(qb422016)
//line basepage.qtpl:188
	return qs422016
//line basepage.qtpl:188
}
